@model IEnumerable<NetworksManagement.Data.Models.Device>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <div class="row">
        @foreach (var device in Model)
        {
            <div class="col-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">@device.Name</h5>
                    </div>
                    <div class="card-body">
                        <canvas height="200" class="myChart" id="@device.Id"></canvas>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@section Scripts
{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="~/js/moment.js"></script>
    <script src="~/js/Chart.js"></script>
    <script src="~/js/chartjs-plugin-streaming.js"></script>
    <script>
        var charts = [];
        $(document).ready(function () {
            $(".myChart").each(function () {
                var deviceId = this.id;
                var chart = new Chart(this, {
                    type: 'line',
                    data: {
                        datasets: [{
                            label: 'Ping',
                            data: []
                        }]
                    },
                    options: {
                        legend: {
                            display: false
                        },
                        tooltips: {
                            enabled: false
                        },
                        scales: {
                            yAxes: [{
                                display: true,
                                ticks: {
                                    min: 0,
                                    max: 200
                                }
                            }],
                            xAxes: [{
                                type: 'realtime',   // x axis will auto-scroll from right to left
                                realtime: {         // per-axis options
                                    duration: 20000,    // data in the past 20000 ms will be displayed
                                    refresh: 3000,      // onRefresh callback will be called every 1000 ms
                                    delay: 1000,        // delay of 1000 ms, so upcoming values are known before plotting a line
                                    lazy: true,
                                }
                            }]
                        }
                    }
                });

                charts.push({ deviceId, chart });
            });

            setInterval(function () {
                getLatestData();
            }, 5000);
        });


        function getLatestData() {
            $(charts).each(function () {
                var myChart = this.chart;
                $.ajax({
                    url: "https://localhost:44302/Tools/DevicePing/" + this.deviceId
                }).then(function (data) {
                    myChart.chart.data.datasets.forEach((dataset) => {
                        dataset.data.push({
                            x: Date.now(),
                            y: data
                        });
                    });
                    myChart.chart.update();
                });
            });
        }
    </script>
}
